name: Deploy on Push to Main
# only run on push to main (merges)
on:
  push:
    branches: [ main ]

# Required block for OIDC token to be used for Azure CLI
permissions:
  id-token: write
  contents: read

# This workflow/action uses the Azure CLI to publish the webapp to a staging slot
# then tests the app to ensure the app is functioning in that staging slot
# If successfull, the workflow continues on and does a slot-swap.

jobs:
  build:
    name: Build to Staging Slot
    runs-on: ubuntu-latest

    steps:
    - name: Git checkout
      uses: actions/checkout@v2

    - name: Setup dotnet 5.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore package dependencies
      run: dotnet restore

    - name: dotet build
      run: dotnet build --no-restore --configuration Release
      
    - name: dotnet publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp --no-build
    
    - name: zip package
      run: |
        cd ${{env.DOTNET_ROOT}}/myapp
        zip -r myapp.zip .
    
    # Logs into Azure via OIDC (note no password)
    - name: 'Az OIDC CLI login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENTID }}
        tenant-id: ${{ secrets.AZURE_TENANTID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTIONID }}
        # Name of the environment. Supported values are azurecloud, azurestack, azureusgovernment, azurechinacloud, azuregermancloud. Default being azurecloud
        # environment: azurecloud

    # Publishes the app to the staging slot
    - name: Azure CLI Publish
      run: az webapp deployment source config-zip -g rgDoNotDeleteDemos -n ${{secrets.APP_NAME}} --slot stage --src ${{env.DOTNET_ROOT}}/myapp/myapp.zip
         
  test:
    name: Smoke Test Staging Slot
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        
      - name: Setup Python
        uses: actions/setup-python@v2.2.1

      - name: Install pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install requests
      - name: Test with pytest
        run: |
          cd test
          pytest --url ${{secrets.STAGING_URL}}
    
  swap-to-prod:
    name: Swap Staging to Prod
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 'Az OIDC CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENTID }}
          tenant-id: ${{ secrets.AZURE_TENANTID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTIONID }}
          # Name of the environment. Supported values are azurecloud, azurestack, azureusgovernment, azurechinacloud, azuregermancloud. Default being azurecloud
          # environment: azurecloud

      - name: Azure Publish to Staging
        uses: Azure/cli@1.0.4
        with:
          # Specify the script here
          inlineScript: az webapp deployment slot swap  --name ${{secrets.APP_NAME}} --resource-group ${{secrets.APP_RG}} --slot stage --target-slot production
          
      
